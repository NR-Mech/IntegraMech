services:
  postgres_pi:
    image: postgres:17.3
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres && psql -U postgres -d postgres -c 'SELECT 1;'"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - postgres_data_pi:/var/lib/postgresql/data
      - ./BackEnd/s.sql:/docker-entrypoint-initdb.d/s.sql
    ports:
      - "5432:5432"
    restart: unless-stopped

  api01: &api
    build:
      context: .
      dockerfile: Dockerfile.back
    hostname: api01
    environment:
      - ASPNETCORE_URLS=http://+:80
      - Database__ConnectionString=Host=postgres_pi;Username=postgres;Password=postgres;Port=5432;Database=mech-db;Minimum Pool Size=10;Maximum Pool Size=10;Multiplexing=true;
    ports:
      - "8081:80"
    depends_on:
      - postgres_pi

  api02:
    <<: *api
    hostname: api02
    ports:
      - "8082:80"

  api03:
    <<: *api
    hostname: api03
    ports:
      - "8083:80"

  nginx:
    image: nginx:latest
    ports:
      - "9999:9999"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api01
      - api02
      - api03
    restart: unless-stopped

volumes:
  postgres_data_pi:

networks:
  default:
    driver: bridge
    name: net-pi
